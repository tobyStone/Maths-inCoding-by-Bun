<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Maths inCoding</title>
    <!-- Favicon -->
    <link rel="icon" type="image/png" href="/public/images/linux_site_logo.jpg" sizes="32x32">
    <link href="public/assets/styleVideo.css" rel="stylesheet"></head>
<body>
    <div class="container">
        <!-- Display Psuedo URL options -->
        <% const urlStub = window.location.pathname.split('/').pop(); %>

        <% for (let i = 0; i < psuedo_url.length; i++) { %>
        <% const videoData = psuedo_url[i]; %>

        <% if (videoData.link_questions_1 === urlStub || videoData.link_questions_2 === urlStub || videoData.link_questions_3 === urlStub) { %>
        <div class="video-container" id="video-container">
            <div class="playback-animation" id="playback-animation">
                <svg class="playback-icons">
                    <use class="hidden" href="#play-icon"></use>
                    <use href="#pause"></use>
                </svg>
            </div>

            <video controls class="video" id="video" preload="auto" poster="<%= videoData.imgSrc %>">
                <source src="<%= videoData.video %>" type="video/mp4">
            </video>

            <div class="video-controls hidden" id="video-controls">
                <div class="video-progress">
                    <progress id="progress-bar" value="0" min="0"></progress>
                    <input class="seek" id="seek" value="0" min="0" type="range" step="1">
                    <div class="seek-tooltip" id="seek-tooltip">00:00</div>
                </div>

                <div class="bottom-controls">
                    <div class="left-controls">
                        <button data-title="Play (k)" id="play">
                            <svg class="playback-icons">
                                <use href="#play-icon"></use>
                                <use class="hidden" href="#pause"></use>
                            </svg>
                        </button>

                        <div class="volume-controls">
                            <button data-title="Mute (m)" class="volume-button" id="volume-button">
                                <svg>
                                    <use class="hidden" href="#volume-mute"></use>
                                    <use class="hidden" href="#volume-low"></use>
                                    <use href="#volume-high"></use>
                                </svg>
                            </button>

                            <input class="volume" id="volume" value="1" data-mute="0.5" type="range" max="1" min="0" step="0.01">
                        </div>

                        <div class="time">
                            <time id="time-elapsed">00:00</time>
                            <span> / </span>
                            <time id="duration">00:00</time>
                        </div>
                    </div>

                    <div class="right-controls">
                        <button data-title="PIP (p)" class="pip-button" id="pip-button">
                            <svg>
                                <use href="#pip"></use>
                            </svg>
                        </button>
                        <button data-title="Full screen (f)" class="fullscreen-button" id="fullscreen-button">
                            <svg>
                                <use href="#fullscreen"></use>
                                <use href="#fullscreen-exit" class="hidden"></use>
                            </svg>
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <script>
            // Get the video element
            const video = document.getElementById('video');

            // Replace this line with your actual timestamp in seconds
            const timestampToLoadQuestions = 7; // Adjust this value

            // Add an event listener to pause and redirect when the timestamp is reached
            video.addEventListener('timeupdate', function () {
                if (video.currentTime >= timestampToLoadQuestions) {
                    video.pause();
                    // Redirect to the maths questions HTML page
                    window.location.href = 'maths_questions.html';
                }
            });
        </script>
        <% } %>
        <% } %>
    </div>

    <!-- Include the EJS script -->
    <script src="/path/to/ejs.js"></script>

    <!-- Video playback script -->
    <script>
        // Get the video element
        const video = document.getElementById('video');

        // Get video controls
        const videoControls = document.getElementById('video-controls');

        // Get other video elements like progress bar, seek bar, etc.
        const progressBar = document.getElementById('progress-bar');
        const seekBar = document.getElementById('seek');
        const seekTooltip = document.getElementById('seek-tooltip');
        const playButton = document.getElementById('play');
        const volumeButton = document.getElementById('volume-button');
        const volumeBar = document.getElementById('volume');
        const timeElapsed = document.getElementById('time-elapsed');
        const duration = document.getElementById('duration');

        // Add event listeners for video playback
        video.addEventListener('loadedmetadata', function () {
            duration.textContent = formatTime(video.duration);
        });

        video.addEventListener('timeupdate', function () {
            progressBar.value = (video.currentTime / video.duration) * 100;
            seekBar.value = video.currentTime;
            timeElapsed.textContent = formatTime(video.currentTime);
        });

        video.addEventListener('ended', function () {
            playButton.innerHTML = '<svg class="playback-icons"><use href="#play-icon"></use></svg>';
        });

        playButton.addEventListener('click', togglePlay);

        function togglePlay() {
            if (video.paused || video.ended) {
                video.play();
            } else {
                video.pause();
            }
        }

        progressBar.addEventListener('input', function () {
            video.currentTime = (progressBar.value / 100) * video.duration;
        });

        seekBar.addEventListener('input', function () {
            video.currentTime = seekBar.value;
        });

        volumeButton.addEventListener('click', toggleMute);

        function toggleMute() {
            video.muted = !video.muted;
            updateVolumeIcon();
        }

        function updateVolumeIcon() {
            if (video.muted) {
                volumeButton.innerHTML = '<svg><use href="#volume-mute"></use></svg>';
            } else if (video.volume === 0) {
                volumeButton.innerHTML = '<svg><use href="#volume-low"></use></svg>';
            } else {
                volumeButton.innerHTML = '<svg><use href="#volume-high"></use></svg>';
            }
        }

        volumeBar.addEventListener('input', function () {
            video.volume = volumeBar.value;
            updateVolumeIcon();
        });

        function formatTime(seconds) {
            const minutes = Math.floor(seconds / 60);
            seconds = Math.floor(seconds % 60);
            return `${padZero(minutes)}:${padZero(seconds)}`;
        }

        function padZero(number) {
            return number < 10 ? `0${number}` : number;
        }
    </script>
</body>
</html>









